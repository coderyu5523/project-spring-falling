plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'io.github.cdimascio:java-dotenv:5.2.2' // redis를 환경 변수에 적용할 때 사용

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'commons-io:commons-io:2.7'

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation group: 'com.redis.testcontainers', name: 'testcontainers-redis', version: '1.6.4'


}

tasks.named('test') {
    useJUnitPlatform()
}
test {
    environment 'REDIS_HOST', 'localhost'
    environment 'REDIS_PORT', '6379'
}
